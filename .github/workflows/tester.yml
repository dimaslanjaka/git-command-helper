name: Tester

on:
  push:
    paths:
      - "**/src/*.ts"
      - "**/test/*.ts"
      - "**/src/*.js"
      - "**/test/*.js"
      - "**/.github/workflows/tester.yml"
      - "**/.github/workflows/builder.yml"
      - "**/package.json"
      - "**/yarn.lock"
      - "**/package-lock.json"
  pull_request:
    types:
      - closed
    paths:
      - "**/src/*.ts"
      - "**/test/*.ts"
      - "**/src/*.js"
      - "**/test/*.js"
      - "**/package.json"
      - "**/yarn.lock"
      - "**/package-lock.json"
  workflow_dispatch:

# run single job
concurrency:
  group: tester-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: ["14.x", "16.x", "18.x", "20.x", "22.x"]
      fail-fast: false
    name: "Build ${{ matrix.os }} Node ${{ matrix.node-version }}"
    uses: ./.github/workflows/builder.yml
    with:
      node-version: ${{ matrix.node-version }}
      os: ${{ matrix.os }}
      repository: dimaslanjaka/git-command-helper
      branch: ${{ github.ref_name }}
    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN || secrets.GITHUB_TOKEN }}

  tester:
    needs: [build]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: ["14.x", "16.x", "18.x", "20.x", "22.x"]
      fail-fast: false
    env:
      NODE_OPTIONS: "--max_old_space_size=8192" #8192 4096 --expose-gc
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      YARN_CHECKSUM_BEHAVIOR: update
      YARN_ENABLE_SCRIPTS: true
      YARN_NODE_LINKER: node-modules
      YARN_IGNORE_NODE: 0

    runs-on: ${{ matrix.os }}

    name: "Test ${{ matrix.os }} Node ${{ matrix.node-version }}"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Corepack & Yarn
        run: |
          corepack enable
          corepack prepare yarn@stable --activate
          curl -L https://raw.githubusercontent.com/dimaslanjaka/nodejs-package-types/refs/heads/main/.yarnrc-template.yml -o .yarnrc.yml

      - name: Git Configuration & Submodules
        continue-on-error: true
        run: |
          git config core.eol lf
          git config core.autocrlf input
          git checkout-index --force --all
          git submodule update --init --recursive
          git submodule update --recursive --remote
          git pull -X theirs
          echo "init submodules"
          git submodule init
          git submodule foreach "git submodule init"
          echo "sync submodules"
          git submodule sync
          git submodule foreach "git submodule sync"
          echo "update submodules"
          mkdir -p bin >/dev/null 2>&1
          npm install -g rimraf binary-collections@https://raw.githubusercontent.com/dimaslanjaka/bin/master/releases/bin.tgz
          npx rimraf .git/modules
          npx submodule-install

      - name: Restore Cache
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            **/.yarn
            **/release*
            **/yarn.lock
            **/node_modules
            **/tmp
            **/dist
          key: ${{ matrix.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/package.json') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.node-version }}-
            ${{ matrix.os }}-

      - name: Set Environment Variables
        id: set-env
        shell: bash
        run: |
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH
          echo "${GITHUB_WORKSPACE}/node_modules/.bin" >> $GITHUB_PATH
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_OUTPUT
          echo "GITHUB_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "GITHUB_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          echo "GITHUB_COMMIT_URL=https://github.com/${{github.repository}}/commit/$(echo $GITHUB_SHA)" >> $GITHUB_ENV
          echo "GITHUB_COMMIT_URL=https://github.com/${{github.repository}}/commit/$(echo $GITHUB_SHA)" >> $GITHUB_OUTPUT
          echo "GITHUB_RUNNER_URL=https://github.com/${{github.repository}}/commit/${{github.sha}}/checks/${{github.run_id}}" >> $GITHUB_ENV
          echo "GITHUB_RUNNER_URL=https://github.com/${{github.repository}}/commit/${{github.sha}}/checks/${{github.run_id}}" >> $GITHUB_OUTPUT
          echo "CACHE_NPM=$(npm config get cache)" >> $GITHUB_ENV
          echo "CACHE_NPM=$(npm config get cache)" >> $GITHUB_OUTPUT
          YARN_CURRENT=$(yarn -v)
          YARN_BERRY=3.2.1
          if [[ "ok" == "$(echo | awk "(${YARN_CURRENT} > ${YARN_BERRY}) { print \"ok\"; }")" ]]; then
            echo "CACHE_YARN=$(yarn config get cacheFolder)" >> $GITHUB_ENV
            echo "CACHE_YARN=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
          else
            echo "CACHE_YARN=$(yarn cache dir)" >> $GITHUB_ENV
            echo "CACHE_YARN=$(yarn cache dir)" >> $GITHUB_OUTPUT
          fi
          echo "architecture=$(getconf LONG_BIT)" >> $GITHUB_ENV
          if [ -f "package-lock.json" ]; then
              echo "PACKAGE-MANAGER=npm" >> $GITHUB_OUTPUT
              echo "PACKAGE-MANAGER=npm" >> $GITHUB_ENV
          else
              echo "PACKAGE-MANAGER=yarn" >> $GITHUB_OUTPUT
              echo "PACKAGE-MANAGER=yarn" >> $GITHUB_ENV
          fi
          unameOut="$(uname -s)"
          case "${unameOut}" in
              Linux*)     machine=linux;;
              Darwin*)    machine=mac;;
              CYGWIN*)    machine=cygwin;;
              MINGW*)     machine=mingw;;
              *)          machine="unknown:${unameOut}"
          esac
          echo "machine=$machine" >> $GITHUB_OUTPUT
          echo "machine=$machine" >> $GITHUB_ENV

      - name: Install Dependencies
        run: |
          if [ "${{ steps.set-env.outputs.PACKAGE-MANAGER }}" == "npm" ]; then
            npm install --legacy-peer-deps || npm install --verbose || npm install --no-shrinkwrap --update-binary || npm install
          else
            touch yarn.lock
            yarn install --inline-builds || yarn install --verbose || yarn install --inline-builds || yarn install --inline-builds
          fi
        id: install
        shell: bash
        continue-on-error: true

      - name: Diagnose Dependency Issues
        if: failure() && steps.install.conclusion == 'failure'
        run: npx npm-check
        shell: bash

      - name: Run Tests
        run: npm test

  coverage:
    needs: [tester]
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: "--max_old_space_size=8192" #8192 4096 --expose-gc
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
      YARN_ENABLE_SCRIPTS: true
      YARN_NODE_LINKER: node-modules
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: ["14.x", "16.x", "18.x", "20.x", "22.x"]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/checkout@v4
        with:
          repository: dimaslanjaka/test-repo
          path: tmp/project-test
          ref: test
      - uses: actions/checkout@v4
        with:
          repository: dimaslanjaka/dimaslanjaka.github.io
          path: tmp/.deploy_git
          ref: master
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            **/.yarn
            **/release*
            **/yarn.lock
            **/node_modules
            **/tmp
            **/dist
          key: ${{ runner.os }}-${{ matrix.node-version }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm install
      - name: Coverage
        run: npm run test-cov
        env:
          CI: true
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.ACCESS_TOKEN }}
