name: Tester

on:
  push:
    paths:
      - '**/src/*.ts'
      - '**/test/*.ts'
      - '**/src/*.js'
      - '**/test/*.js'
  pull_request:
    types:
      - closed
    paths:
      - '**/src/*.ts'
      - '**/test/*.ts'
      - '**/src/*.js'
      - '**/test/*.js'
  workflow_dispatch:

jobs:
  tester:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: ['14.x', '16.x', '18.x']
      fail-fast: false
      #max-parallel: 6
    env:
      NODE_OPTIONS: '--max_old_space_size=8192' #8192 4096 --expose-gc
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

    runs-on: ubuntu-latest

    name: Tester
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: recursive

      - name: Set EOL git configs
        continue-on-error: true
        run: |
          git config core.eol lf
          git config core.autocrlf input
          git checkout-index --force --all

      - name: Pull & update submodules recursively
        continue-on-error: true
        run: |
          git submodule update --init --recursive
          git submodule update --recursive --remote
          git pull -X theirs

      - name: initialize nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable corepack
        run: corepack enable

      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            **/dist
            **/tmp
            **/node_modules
            /.yarn
            ./yarn.lock
          key: ${{ runner.os }}-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-${{ github.ref_name }}
            ${{ runner.os }}-

      - name: install
        run: |
          touch yarn.lock
          yarn install

      - name: test
        run: npm test

  coverage:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: ['14.x']
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm install
      - name: Coverage
        run: npm run test-cov
        env:
          CI: true
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.ACCESS_TOKEN }}
